{"ast":null,"code":"var _jsxFileName = \"/Users/denisbogdanov/Desktop/Denis/Projects/react/part1/anecdote/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n//Component for section titles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 28\n  }, this);\n};\n\n//Component to display the anecdotes and their votes\n_c = Title;\nconst Display = _ref2 => {\n  let {\n    content,\n    votes\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"has \", votes, \" votes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\n//Component to display buttons\n_c2 = Display;\nconst Button = _ref3 => {\n  let {\n    handleClick,\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n\n//Component to get Most Voted Anecdote\n_c3 = Button;\nconst TopAnecdote = _ref4 => {\n  let {\n    anecdotes,\n    votes\n  } = _ref4;\n  const maxVotes = Math.max(...votes);\n  const topIndex = votes.indexOf(maxVotes);\n  if (maxVotes === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Be the first to vote!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: anecdotes[topIndex]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c4 = TopAnecdote;\nconst App = () => {\n  _s();\n  const anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.', 'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients'];\n  const [selected, setSelected] = useState(0);\n  //set State for votes array and initialize with zeros\n  const [votes, setVotes] = useState(Array(anecdotes.length).fill(0));\n\n  //get random anecdote from array of anecdotes\n  const getRandomAnecdote = () => {\n    return setSelected(Math.floor(Math.random() * anecdotes.length));\n  };\n\n  //vote on anecdotes and store votes on a new array\n  const getVotes = () => {\n    const copy = [...votes];\n    copy[selected] += 1;\n    setVotes(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"Anecdote of the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      content: anecdotes[selected],\n      votes: votes[selected]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: getVotes,\n      text: \"Vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: getRandomAnecdote,\n      text: \"Next Anecdote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      title: \"Anecdote with most votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopAnecdote, {\n      anecdotes: anecdotes,\n      votes: votes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iw+b2gPtfr6prde9uaL3QKroSSE=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"TopAnecdote\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","Title","title","Display","content","votes","Button","handleClick","text","TopAnecdote","anecdotes","maxVotes","Math","max","topIndex","indexOf","App","selected","setSelected","setVotes","Array","length","fill","getRandomAnecdote","floor","random","getVotes","copy"],"sources":["/Users/denisbogdanov/Desktop/Denis/Projects/react/part1/anecdote/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\n//Component for section titles\nconst Title = ({title}) => <h1>{title}</h1>\n\n//Component to display the anecdotes and their votes\nconst Display = ({content, votes}) => (\n  <div>\n    <p>{content}</p>\n    <p>has {votes} votes</p>\n  </div>\n)\n\n//Component to display buttons\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>{text}</button>\n) \n\n//Component to get Most Voted Anecdote\nconst TopAnecdote = ({anecdotes, votes}) => {\n  const maxVotes = Math.max(...votes)\n  const topIndex = votes.indexOf(maxVotes)\n\n  if(maxVotes === 0){\n    return (\n      <h4>Be the first to vote!</h4>\n    )\n  }\n\n  return (\n    <p>{anecdotes[topIndex]}</p>\n  )\n}\n\nconst App = () => {\n  const anecdotes = [\n    'If it hurts, do it more often',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n    'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients'\n  ]\n   \n  const [selected, setSelected] = useState(0)\n  //set State for votes array and initialize with zeros\n  const [votes, setVotes] = useState(Array(anecdotes.length).fill(0))\n  \n  //get random anecdote from array of anecdotes\nconst getRandomAnecdote = () => {\n  return setSelected(Math.floor(Math.random() * anecdotes.length))\n}\n\n//vote on anecdotes and store votes on a new array\nconst getVotes = () => {\n  const copy = [...votes]\n  copy[selected] +=1\n   setVotes(copy)\n}\n\n  return (\n    <div>\n      <Title title=\"Anecdote of the day\" />\n      <Display content={anecdotes[selected]} votes={votes[selected]} />\n      <Button handleClick={getVotes} text=\"Vote\" />\n      <Button handleClick={getRandomAnecdote} text=\"Next Anecdote\" />\n      <Title title=\"Anecdote with most votes\" />\n      <TopAnecdote anecdotes={anecdotes} votes={votes} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}