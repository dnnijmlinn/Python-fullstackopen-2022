{"ast":null,"code":"var _jsxFileName = \"/Users/denisbogdanov/Desktop/Denis/Projects/react/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n//Button Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n//Statistic Line Component\n_c = Button;\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  if (text === 'positive') {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n//Statistics Component\n_c2 = StatisticLine;\nconst Statistics = props => {\n  if (props.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"good\",\n            value: props.good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"neutral\",\n            value: props.neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"bad\",\n            value: props.bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"all\",\n            value: props.all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"average\",\n            value: props.average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"positive\",\n            value: props.positive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  //set each button Onclick function\n  const increaseGood = () => setGood(good + 1);\n  const increaseNeutral = () => setNeutral(neutral + 1);\n  const increaseBad = () => setBad(bad + 1);\n\n  //calculate total clicks\n  const all = good + bad + neutral;\n\n  //calculate average score\n  let goodScore = good * 1;\n  let neutralScore = 0;\n  let badScore = bad * -1;\n  const score = [goodScore + neutralScore + badScore];\n  const average = score / 3;\n\n  //limit average to 1 decimal\n  const roundedAverage = () => average.toFixed(1);\n\n  //calculate the percentage of positive feedback\n  const positive = good * 100 / all;\n\n  // limit positive to 1 decimal and add % sign\n  const roundedPositive = () => positive.toFixed(1) + '%';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: all,\n      average: roundedAverage(),\n      positive: roundedPositive()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","props","handleClick","text","StatisticLine","value","Statistics","all","good","neutral","bad","average","positive","App","setGood","setNeutral","setBad","increaseGood","increaseNeutral","increaseBad","goodScore","neutralScore","badScore","score","roundedAverage","toFixed","roundedPositive"],"sources":["/Users/denisbogdanov/Desktop/Denis/Projects/react/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\n//Button Component\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}>{props.text}</button>\n  )\n}\n\n//Statistic Line Component\nconst StatisticLine = ({ text, value }) => {\n  if (text === 'positive') {\n    return (\n      <tr>\n        <td>{text}</td>\n        <td>{value}</td>\n      </tr>\n      )\n  }\n  return (\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  )\n}\n\n\n//Statistics Component\nconst Statistics = (props) => {\n  if(props.all === 0){\n    return (\n      <p>No feedback given</p>\n    )\n  }\n  return(\n    <div>\n      <table>\n        <tbody>\n          <tr>\n        <StatisticLine text=\"good\" value={props.good} />\n        </tr>\n        <tr>\n        <StatisticLine text=\"neutral\" value={props.neutral} />\n        </tr>\n        <tr>\n        <StatisticLine text=\"bad\" value={props.bad} />\n        </tr>\n        <tr>\n        <StatisticLine text=\"all\" value={props.all} />\n        </tr>\n        <tr>\n        <StatisticLine text=\"average\" value={props.average} />\n        </tr>\n        <tr>\n        <StatisticLine text=\"positive\" value={props.positive} />\n        </tr>\n        </tbody>\n      </table>  \n    </div>\n  )\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  //set each button Onclick function\n  const increaseGood = () => setGood(good + 1)\n  const increaseNeutral = () => setNeutral(neutral + 1)\n  const increaseBad = () => setBad(bad + 1)\n\n  //calculate total clicks\n  const all = good + bad + neutral;\n\n  //calculate average score\n  let goodScore =  good *1\n  let neutralScore =  0\n  let badScore =  bad * -1\n\n  const score = [goodScore + neutralScore + badScore]\n\n  const average = (score / 3)\n\n  //limit average to 1 decimal\n  const roundedAverage = () => average.toFixed(1)\n\n  //calculate the percentage of positive feedback\n  const positive = (good * 100) / all\n\n    // limit positive to 1 decimal and add % sign\n    const roundedPositive = () => (positive.toFixed(1) + '%')\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={increaseGood} text=\"good\" />\n      <Button handleClick={increaseNeutral} text=\"neutral\" />\n      <Button handleClick={increaseBad} text='bad' />\n      <h2>statistics</h2>\n      <Statistics \n      good={good}\n      neutral={neutral}\n      bad={bad}\n      all={all}\n      average={roundedAverage()}\n      positive={roundedPositive()}\n      />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}